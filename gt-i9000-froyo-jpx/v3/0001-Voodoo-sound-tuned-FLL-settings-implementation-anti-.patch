From 294483342b3f6e496945fb05d605a31718f985f1 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?SIMOND=20Fran=C3=A7ois?= <francois@lienweb.fr>
Date: Wed, 26 Jan 2011 23:20:13 +0100
Subject: [PATCH 1/2] Voodoo sound: tuned FLL settings implementation - anti jitter

---
 Kernel/sound/soc/codecs/wm8994_voodoo.c |   49 +++++++++++++++++++++++++++---
 Kernel/sound/soc/codecs/wm8994_voodoo.h |    2 +
 2 files changed, 46 insertions(+), 5 deletions(-)

diff --git a/Kernel/sound/soc/codecs/wm8994_voodoo.c b/Kernel/sound/soc/codecs/wm8994_voodoo.c
index a9c90c0..9fed1f0 100644
--- a/Kernel/sound/soc/codecs/wm8994_voodoo.c
+++ b/Kernel/sound/soc/codecs/wm8994_voodoo.c
@@ -26,11 +26,11 @@
 #define SUBJECT "wm8994_voodoo.c"
 #define VOODOO_SOUND_VERSION 2
 
+bool bypass_write_hook = false;
 
 #ifdef CONFIG_SND_VOODOO_HP_LEVEL_CONTROL
 unsigned short hplvol = CONFIG_SND_VOODOO_HP_LEVEL;
 unsigned short hprvol = CONFIG_SND_VOODOO_HP_LEVEL;
-bool hpvol_force = true;
 #endif
 
 #ifdef CONFIG_SND_VOODOO_FM
@@ -42,7 +42,8 @@ unsigned short recording_preset = 1;
 #endif
 
 bool full_bitwidth = false;
-bool dac_osr128 = false;
+bool dac_osr128 = true;
+bool fll_tuning = true;
 
 // keep here a pointer to the codec structure
 struct snd_soc_codec *codec_;
@@ -53,7 +54,7 @@ void update_hpvol()
 {
 	unsigned short val;
 
-	hpvol_force = false;
+	bypass_write_hook = true;
 	// hard limit to 62 because 63 introduces distortions
 	if (hplvol > 62)
 		hplvol = 62;
@@ -71,7 +72,7 @@ void update_hpvol()
 	val |= WM8994_HPOUT1L_ZC;
 	wm8994_write(codec_, WM8994_RIGHT_OUTPUT_VOLUME, val);
 
-	hpvol_force = true;
+	bypass_write_hook = false;
 }
 #endif
 
@@ -198,6 +199,24 @@ void update_dac_osr128()
 		wm8994_write(codec_, WM8994_OVERSAMPLING, 0);
 }
 
+unsigned short tune_fll_value(unsigned short val)
+{
+	val = (val >> WM8994_FLL1_GAIN_WIDTH << WM8994_FLL1_GAIN_WIDTH);
+	if (fll_tuning == 1)
+		val |= 5;
+	return val;
+}
+
+void update_fll_tuning()
+{
+	unsigned short val;
+	bypass_write_hook = true;
+	val = wm8994_read(codec_, WM8994_FLL1_CONTROL_4);
+	val = tune_fll_value(val);
+	wm8994_write(codec_, WM8994_FLL1_CONTROL_4, val);
+	bypass_write_hook = false;
+}
+
 /*
  *
  * Declaring the controling misc devices
@@ -299,6 +318,22 @@ static ssize_t dac_osr128_store(struct device *dev, struct device_attribute *att
 	return size;
 }
 
+static ssize_t fll_tuning_show(struct device *dev, struct device_attribute *attr, char *buf)
+{
+	return sprintf(buf,"%u\n",(fll_tuning ? 1 : 0));
+}
+
+static ssize_t fll_tuning_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t size)
+{
+	unsigned short state;
+	if (sscanf(buf, "%hu", &state) == 1)
+	{
+		fll_tuning = state == 0 ? false : true;
+		update_fll_tuning();
+	}
+	return size;
+}
+
 
 #ifdef CONFIG_SND_VOODOO_DEBUG
 static ssize_t show_wm8994_register_dump(struct device *dev, struct device_attribute *attr, char *buf)
@@ -389,6 +424,7 @@ static DEVICE_ATTR(recording_preset, S_IRUGO | S_IWUGO , recording_preset_show,
 #endif
 static DEVICE_ATTR(full_bitwidth, S_IRUGO | S_IWUGO , full_bitwidth_show, full_bitwidth_store);
 static DEVICE_ATTR(dac_osr128, S_IRUGO | S_IWUGO , dac_osr128_show, dac_osr128_store);
+static DEVICE_ATTR(fll_tuning, S_IRUGO | S_IWUGO , fll_tuning_show, fll_tuning_store);
 #ifdef CONFIG_SND_VOODOO_DEBUG
 static DEVICE_ATTR(wm8994_register_dump, S_IRUGO , show_wm8994_register_dump, NULL);
 static DEVICE_ATTR(wm8994_write, S_IWUSR , NULL, store_wm8994_write);
@@ -407,6 +443,7 @@ static struct attribute *voodoo_sound_attributes[] = {
 #endif
 		&dev_attr_full_bitwidth.attr,
 		&dev_attr_dac_osr128.attr,
+		&dev_attr_fll_tuning.attr,
 #ifdef CONFIG_SND_VOODOO_DEBUG
 		&dev_attr_wm8994_register_dump.attr,
 		&dev_attr_wm8994_write.attr,
@@ -461,12 +498,14 @@ unsigned int voodoo_hook_wm8994_write(struct snd_soc_codec *codec, unsigned int
 	// modify some registers before those being written to the codec
 #ifdef CONFIG_SND_VOODOO_HP_LEVEL_CONTROL
 	// sniff headphone amplifier level changes and apply our level instead
-	if (hpvol_force)
+	if (! bypass_write_hook)
 	{
 		if (reg == WM8994_LEFT_OUTPUT_VOLUME)
 			value = (WM8994_HPOUT1_VU | WM8994_HPOUT1L_MUTE_N | hplvol);
 		if (reg == WM8994_RIGHT_OUTPUT_VOLUME)
 			value = (WM8994_HPOUT1_VU | WM8994_HPOUT1R_MUTE_N | hprvol);
+		if (reg == WM8994_FLL1_CONTROL_4)
+			value = tune_fll_value(value);
 	}
 #endif
 
diff --git a/Kernel/sound/soc/codecs/wm8994_voodoo.h b/Kernel/sound/soc/codecs/wm8994_voodoo.h
index 6f210ba..a84e36c 100644
--- a/Kernel/sound/soc/codecs/wm8994_voodoo.h
+++ b/Kernel/sound/soc/codecs/wm8994_voodoo.h
@@ -16,3 +16,5 @@ void update_fm_radio_headset_restore_bass(bool with_mute);
 void update_recording_preset(void);
 void update_full_bitwidth(bool with_mute);
 void update_dac_osr128(void);
+void update_fll_tuning(void);
+unsigned short tune_fll_value(unsigned short val);
-- 
1.7.1

