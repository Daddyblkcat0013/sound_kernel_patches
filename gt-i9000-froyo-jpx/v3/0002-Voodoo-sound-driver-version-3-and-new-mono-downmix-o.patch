From c7a16598571e77faee00230f054c4d5fe8bd4417 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?SIMOND=20Fran=C3=A7ois?= <francois@lienweb.fr>
Date: Fri, 28 Jan 2011 00:09:56 +0100
Subject: [PATCH 2/2] Voodoo sound: driver version 3 and new mono downmix option

---
 Kernel/sound/soc/codecs/wm8994_voodoo.c |   37 +++++++++++++++++++++++++++++-
 Kernel/sound/soc/codecs/wm8994_voodoo.h |    1 +
 2 files changed, 36 insertions(+), 2 deletions(-)

diff --git a/Kernel/sound/soc/codecs/wm8994_voodoo.c b/Kernel/sound/soc/codecs/wm8994_voodoo.c
index 9fed1f0..5797c8e 100644
--- a/Kernel/sound/soc/codecs/wm8994_voodoo.c
+++ b/Kernel/sound/soc/codecs/wm8994_voodoo.c
@@ -24,7 +24,7 @@
 #include "wm8994_voodoo.h"
 
 #define SUBJECT "wm8994_voodoo.c"
-#define VOODOO_SOUND_VERSION 2
+#define VOODOO_SOUND_VERSION 3
 
 bool bypass_write_hook = false;
 
@@ -43,7 +43,8 @@ unsigned short recording_preset = 1;
 
 bool full_bitwidth = false;
 bool dac_osr128 = true;
-bool fll_tuning = true;
+bool fll_tuning = false;
+bool mono_downmix = false;
 
 // keep here a pointer to the codec structure
 struct snd_soc_codec *codec_;
@@ -217,6 +218,19 @@ void update_fll_tuning()
 	bypass_write_hook = false;
 }
 
+void update_mono_downmix()
+{
+	unsigned short val;
+	if (mono_downmix)
+	{
+		val = wm8994_read(codec_, WM8994_AIF1_DAC1_FILTERS_1);
+		val |= 0x80;
+		wm8994_write(codec_, WM8994_AIF1_DAC1_FILTERS_1, val);
+	}
+	else
+		wm8994_write(codec_, WM8994_AIF1_DAC1_FILTERS_1, 0x0);
+}
+
 /*
  *
  * Declaring the controling misc devices
@@ -334,6 +348,22 @@ static ssize_t fll_tuning_store(struct device *dev, struct device_attribute *att
 	return size;
 }
 
+static ssize_t mono_downmix_show(struct device *dev, struct device_attribute *attr, char *buf)
+{
+	return sprintf(buf,"%u\n",(mono_downmix ? 1 : 0));
+}
+
+static ssize_t mono_downmix_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t size)
+{
+	unsigned short state;
+	if (sscanf(buf, "%hu", &state) == 1)
+	{
+		mono_downmix = state == 0 ? false : true;
+		update_mono_downmix();
+	}
+	return size;
+}
+
 
 #ifdef CONFIG_SND_VOODOO_DEBUG
 static ssize_t show_wm8994_register_dump(struct device *dev, struct device_attribute *attr, char *buf)
@@ -425,6 +455,7 @@ static DEVICE_ATTR(recording_preset, S_IRUGO | S_IWUGO , recording_preset_show,
 static DEVICE_ATTR(full_bitwidth, S_IRUGO | S_IWUGO , full_bitwidth_show, full_bitwidth_store);
 static DEVICE_ATTR(dac_osr128, S_IRUGO | S_IWUGO , dac_osr128_show, dac_osr128_store);
 static DEVICE_ATTR(fll_tuning, S_IRUGO | S_IWUGO , fll_tuning_show, fll_tuning_store);
+static DEVICE_ATTR(mono_downmix, S_IRUGO | S_IWUGO , mono_downmix_show, mono_downmix_store);
 #ifdef CONFIG_SND_VOODOO_DEBUG
 static DEVICE_ATTR(wm8994_register_dump, S_IRUGO , show_wm8994_register_dump, NULL);
 static DEVICE_ATTR(wm8994_write, S_IWUSR , NULL, store_wm8994_write);
@@ -444,6 +475,7 @@ static struct attribute *voodoo_sound_attributes[] = {
 		&dev_attr_full_bitwidth.attr,
 		&dev_attr_dac_osr128.attr,
 		&dev_attr_fll_tuning.attr,
+		&dev_attr_mono_downmix.attr,
 #ifdef CONFIG_SND_VOODOO_DEBUG
 		&dev_attr_wm8994_register_dump.attr,
 		&dev_attr_wm8994_write.attr,
@@ -490,6 +522,7 @@ void voodoo_hook_playback_headset()
 {
 	update_full_bitwidth(false);
 	update_dac_osr128();
+	update_mono_downmix();
 }
 
 
diff --git a/Kernel/sound/soc/codecs/wm8994_voodoo.h b/Kernel/sound/soc/codecs/wm8994_voodoo.h
index a84e36c..3214d34 100644
--- a/Kernel/sound/soc/codecs/wm8994_voodoo.h
+++ b/Kernel/sound/soc/codecs/wm8994_voodoo.h
@@ -18,3 +18,4 @@ void update_full_bitwidth(bool with_mute);
 void update_dac_osr128(void);
 void update_fll_tuning(void);
 unsigned short tune_fll_value(unsigned short val);
+void update_mono_downmix(void);
-- 
1.7.1

